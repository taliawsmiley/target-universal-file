[tool.poetry]
name = "target-universal-file"
version = "0.0.1"
description = "Singer target for UniversalFile, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Sebastian Smiley <firstname.lastname@example.com>"]
keywords = [
    "ELT",
    "UniversalFile",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
singer-sdk = { version="~=0.44.3", extras = ["faker"] }
gcsfs = { version = ">=2025.3.2", optional = true }
s3fs = { version = ">=2025.3.2", optional = true }
aiobotocore = { version = ">=2.21.1", optional = true }
requests = "~=2.32.3"
fsspec = ">=2025.3.2"
pyarrow = "~=19.0.1"
pyarrow-stubs ="~=17.17"
xlsxwriter = "~=3.2.2"

[tool.poetry.group.dev.dependencies]
pytest = ">=8"
ruff = "~=0.11.4"
black = "~=25.1.0"
singer-sdk = { version="~=0.44.3", extras = ["testing"] }

[tool.poetry.extras]
gcs = ["gcsfs"]
s3 = ["s3fs", "aiobotocore"]

[tool.pytest.ini_options]
addopts = '--durations=10'

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true

[tool.ruff]
src = ["target_universal_file"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "ANN002",
    "ANN003",
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
    "D",
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["target_universal_file"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
target-universal-file = 'target_universal_file.target:TargetUniversalFile.cli'
